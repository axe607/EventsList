//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventsListData.EventService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventDto", Namespace="http://schemas.datacontract.org/2004/07/EventsListService.Contracts.Models.Dto")]
    [System.SerializableAttribute()]
    public partial class EventDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubcategoryIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressId {
            get {
                return this.AddressIdField;
            }
            set {
                if ((this.AddressIdField.Equals(value) != true)) {
                    this.AddressIdField = value;
                    this.RaisePropertyChanged("AddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizerId {
            get {
                return this.OrganizerIdField;
            }
            set {
                if ((this.OrganizerIdField.Equals(value) != true)) {
                    this.OrganizerIdField = value;
                    this.RaisePropertyChanged("OrganizerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubcategoryId {
            get {
                return this.SubcategoryIdField;
            }
            set {
                if ((this.SubcategoryIdField.Equals(value) != true)) {
                    this.SubcategoryIdField = value;
                    this.RaisePropertyChanged("SubcategoryId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventDetailDto", Namespace="http://schemas.datacontract.org/2004/07/EventsListService.Contracts.Models.Dto")]
    [System.SerializableAttribute()]
    public partial class EventDetailDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EventsListData.EventService.EmailDto[] OrganizerEmailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EventsListData.EventService.PhoneDto[] OrganizerPhonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubcategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((this.EventIdField.Equals(value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EventsListData.EventService.EmailDto[] OrganizerEmails {
            get {
                return this.OrganizerEmailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerEmailsField, value) != true)) {
                    this.OrganizerEmailsField = value;
                    this.RaisePropertyChanged("OrganizerEmails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizerName {
            get {
                return this.OrganizerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerNameField, value) != true)) {
                    this.OrganizerNameField = value;
                    this.RaisePropertyChanged("OrganizerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EventsListData.EventService.PhoneDto[] OrganizerPhones {
            get {
                return this.OrganizerPhonesField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerPhonesField, value) != true)) {
                    this.OrganizerPhonesField = value;
                    this.RaisePropertyChanged("OrganizerPhones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubcategoryName {
            get {
                return this.SubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryNameField, value) != true)) {
                    this.SubcategoryNameField = value;
                    this.RaisePropertyChanged("SubcategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailDto", Namespace="http://schemas.datacontract.org/2004/07/EventsListService.Contracts.Models.Dto")]
    [System.SerializableAttribute()]
    public partial class EmailDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizerId {
            get {
                return this.OrganizerIdField;
            }
            set {
                if ((this.OrganizerIdField.Equals(value) != true)) {
                    this.OrganizerIdField = value;
                    this.RaisePropertyChanged("OrganizerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneDto", Namespace="http://schemas.datacontract.org/2004/07/EventsListService.Contracts.Models.Dto")]
    [System.SerializableAttribute()]
    public partial class PhoneDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizerId {
            get {
                return this.OrganizerIdField;
            }
            set {
                if ((this.OrganizerIdField.Equals(value) != true)) {
                    this.OrganizerIdField = value;
                    this.RaisePropertyChanged("OrganizerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryDto", Namespace="http://schemas.datacontract.org/2004/07/EventsListService.Contracts.Models.Dto")]
    [System.SerializableAttribute()]
    public partial class CategoryDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EventsListData.EventService.SubcategoryDto[] SubcategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EventsListData.EventService.SubcategoryDto[] Subcategories {
            get {
                return this.SubcategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoriesField, value) != true)) {
                    this.SubcategoriesField = value;
                    this.RaisePropertyChanged("Subcategories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubcategoryDto", Namespace="http://schemas.datacontract.org/2004/07/EventsListService.Contracts.Models.Dto")]
    [System.SerializableAttribute()]
    public partial class SubcategoryDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizerDto", Namespace="http://schemas.datacontract.org/2004/07/EventsListService.Contracts.Models.Dto")]
    [System.SerializableAttribute()]
    public partial class OrganizerDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EventsListData.EventService.EmailDto[] EmailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EventsListData.EventService.PhoneDto[] PhonesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EventsListData.EventService.EmailDto[] Emails {
            get {
                return this.EmailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailsField, value) != true)) {
                    this.EmailsField = value;
                    this.RaisePropertyChanged("Emails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EventsListData.EventService.PhoneDto[] Phones {
            get {
                return this.PhonesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhonesField, value) != true)) {
                    this.PhonesField = value;
                    this.RaisePropertyChanged("Phones");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressDto", Namespace="http://schemas.datacontract.org/2004/07/EventsListService.Contracts.Models.Dto")]
    [System.SerializableAttribute()]
    public partial class AddressDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EventService.IEventService")]
    public interface IEventService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEvents", ReplyAction="http://tempuri.org/IEventService/GetEventsResponse")]
        EventsListData.EventService.EventDto[] GetEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEvents", ReplyAction="http://tempuri.org/IEventService/GetEventsResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.EventDto[]> GetEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventsBySubcategoryId", ReplyAction="http://tempuri.org/IEventService/GetEventsBySubcategoryIdResponse")]
        EventsListData.EventService.EventDto[] GetEventsBySubcategoryId(int subcategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventsBySubcategoryId", ReplyAction="http://tempuri.org/IEventService/GetEventsBySubcategoryIdResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.EventDto[]> GetEventsBySubcategoryIdAsync(int subcategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventsByCategoryId", ReplyAction="http://tempuri.org/IEventService/GetEventsByCategoryIdResponse")]
        EventsListData.EventService.EventDto[] GetEventsByCategoryId(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventsByCategoryId", ReplyAction="http://tempuri.org/IEventService/GetEventsByCategoryIdResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.EventDto[]> GetEventsByCategoryIdAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventInfoDetailById", ReplyAction="http://tempuri.org/IEventService/GetEventInfoDetailByIdResponse")]
        EventsListData.EventService.EventDetailDto GetEventInfoDetailById(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventInfoDetailById", ReplyAction="http://tempuri.org/IEventService/GetEventInfoDetailByIdResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.EventDetailDto> GetEventInfoDetailByIdAsync(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetCategories", ReplyAction="http://tempuri.org/IEventService/GetCategoriesResponse")]
        EventsListData.EventService.CategoryDto[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetCategories", ReplyAction="http://tempuri.org/IEventService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.CategoryDto[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetSubcategories", ReplyAction="http://tempuri.org/IEventService/GetSubcategoriesResponse")]
        EventsListData.EventService.SubcategoryDto[] GetSubcategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetSubcategories", ReplyAction="http://tempuri.org/IEventService/GetSubcategoriesResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.SubcategoryDto[]> GetSubcategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetSubcategoriesByCategoryId", ReplyAction="http://tempuri.org/IEventService/GetSubcategoriesByCategoryIdResponse")]
        EventsListData.EventService.SubcategoryDto[] GetSubcategoriesByCategoryId(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetSubcategoriesByCategoryId", ReplyAction="http://tempuri.org/IEventService/GetSubcategoriesByCategoryIdResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.SubcategoryDto[]> GetSubcategoriesByCategoryIdAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetOrganizers", ReplyAction="http://tempuri.org/IEventService/GetOrganizersResponse")]
        EventsListData.EventService.OrganizerDto[] GetOrganizers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetOrganizers", ReplyAction="http://tempuri.org/IEventService/GetOrganizersResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.OrganizerDto[]> GetOrganizersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetOrganizerById", ReplyAction="http://tempuri.org/IEventService/GetOrganizerByIdResponse")]
        EventsListData.EventService.OrganizerDto GetOrganizerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetOrganizerById", ReplyAction="http://tempuri.org/IEventService/GetOrganizerByIdResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.OrganizerDto> GetOrganizerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEmailsByOrganizerId", ReplyAction="http://tempuri.org/IEventService/GetEmailsByOrganizerIdResponse")]
        EventsListData.EventService.EmailDto[] GetEmailsByOrganizerId(int organizerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEmailsByOrganizerId", ReplyAction="http://tempuri.org/IEventService/GetEmailsByOrganizerIdResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.EmailDto[]> GetEmailsByOrganizerIdAsync(int organizerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetPhonesByOrganizerId", ReplyAction="http://tempuri.org/IEventService/GetPhonesByOrganizerIdResponse")]
        EventsListData.EventService.PhoneDto[] GetPhonesByOrganizerId(int organizerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetPhonesByOrganizerId", ReplyAction="http://tempuri.org/IEventService/GetPhonesByOrganizerIdResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.PhoneDto[]> GetPhonesByOrganizerIdAsync(int organizerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetAddressById", ReplyAction="http://tempuri.org/IEventService/GetAddressByIdResponse")]
        EventsListData.EventService.AddressDto GetAddressById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetAddressById", ReplyAction="http://tempuri.org/IEventService/GetAddressByIdResponse")]
        System.Threading.Tasks.Task<EventsListData.EventService.AddressDto> GetAddressByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventServiceChannel : EventsListData.EventService.IEventService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventServiceClient : System.ServiceModel.ClientBase<EventsListData.EventService.IEventService>, EventsListData.EventService.IEventService {
        
        public EventServiceClient() {
        }
        
        public EventServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EventsListData.EventService.EventDto[] GetEvents() {
            return base.Channel.GetEvents();
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.EventDto[]> GetEventsAsync() {
            return base.Channel.GetEventsAsync();
        }
        
        public EventsListData.EventService.EventDto[] GetEventsBySubcategoryId(int subcategoryId) {
            return base.Channel.GetEventsBySubcategoryId(subcategoryId);
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.EventDto[]> GetEventsBySubcategoryIdAsync(int subcategoryId) {
            return base.Channel.GetEventsBySubcategoryIdAsync(subcategoryId);
        }
        
        public EventsListData.EventService.EventDto[] GetEventsByCategoryId(int categoryId) {
            return base.Channel.GetEventsByCategoryId(categoryId);
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.EventDto[]> GetEventsByCategoryIdAsync(int categoryId) {
            return base.Channel.GetEventsByCategoryIdAsync(categoryId);
        }
        
        public EventsListData.EventService.EventDetailDto GetEventInfoDetailById(int eventId) {
            return base.Channel.GetEventInfoDetailById(eventId);
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.EventDetailDto> GetEventInfoDetailByIdAsync(int eventId) {
            return base.Channel.GetEventInfoDetailByIdAsync(eventId);
        }
        
        public EventsListData.EventService.CategoryDto[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.CategoryDto[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public EventsListData.EventService.SubcategoryDto[] GetSubcategories() {
            return base.Channel.GetSubcategories();
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.SubcategoryDto[]> GetSubcategoriesAsync() {
            return base.Channel.GetSubcategoriesAsync();
        }
        
        public EventsListData.EventService.SubcategoryDto[] GetSubcategoriesByCategoryId(int categoryId) {
            return base.Channel.GetSubcategoriesByCategoryId(categoryId);
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.SubcategoryDto[]> GetSubcategoriesByCategoryIdAsync(int categoryId) {
            return base.Channel.GetSubcategoriesByCategoryIdAsync(categoryId);
        }
        
        public EventsListData.EventService.OrganizerDto[] GetOrganizers() {
            return base.Channel.GetOrganizers();
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.OrganizerDto[]> GetOrganizersAsync() {
            return base.Channel.GetOrganizersAsync();
        }
        
        public EventsListData.EventService.OrganizerDto GetOrganizerById(int id) {
            return base.Channel.GetOrganizerById(id);
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.OrganizerDto> GetOrganizerByIdAsync(int id) {
            return base.Channel.GetOrganizerByIdAsync(id);
        }
        
        public EventsListData.EventService.EmailDto[] GetEmailsByOrganizerId(int organizerId) {
            return base.Channel.GetEmailsByOrganizerId(organizerId);
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.EmailDto[]> GetEmailsByOrganizerIdAsync(int organizerId) {
            return base.Channel.GetEmailsByOrganizerIdAsync(organizerId);
        }
        
        public EventsListData.EventService.PhoneDto[] GetPhonesByOrganizerId(int organizerId) {
            return base.Channel.GetPhonesByOrganizerId(organizerId);
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.PhoneDto[]> GetPhonesByOrganizerIdAsync(int organizerId) {
            return base.Channel.GetPhonesByOrganizerIdAsync(organizerId);
        }
        
        public EventsListData.EventService.AddressDto GetAddressById(int id) {
            return base.Channel.GetAddressById(id);
        }
        
        public System.Threading.Tasks.Task<EventsListData.EventService.AddressDto> GetAddressByIdAsync(int id) {
            return base.Channel.GetAddressByIdAsync(id);
        }
    }
}
